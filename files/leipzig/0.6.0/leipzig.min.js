/*! leipzig.js v0.5.0 | ISC License | github.com/bdchauvette/leipzig.js */
!function(e,s){if("function"==typeof define&&define.amd)define("Leipzig",["exports","module"],s);else if("undefined"!=typeof exports&&"undefined"!=typeof module)s(exports,module);else{var t={exports:{}};s(t.exports,t),e.Leipzig=t.exports}}(this,function(e,s){"use strict";function t(e,s){e.classList?e.classList.add(s):e.className+=" "+s}function i(e,s){var t;if(e.classList)t=e.classList.contains(s);else{var s=new RegExp("(^| )"+s+"( |$)","gi");t=new RegExp(s).test(e.className)}return t}function n(e,s,t){return"undefined"==typeof e[s]?t:e[s]}function r(e,s){var t=void 0;return window.CustomEvent?t=new CustomEvent(e,{detail:s,bubbles:!0,cancelable:!0}):(t=document.createEvent("CustomEvent"),t.initCustomEvent(e,!0,!0,s)),t}function a(e,s,t){var i=new r(s,t);e.dispatchEvent(i)}function o(e){return e.every(function(e){return"string"==typeof e})}var l=function c(e,s){if(!(this instanceof c))return new c(e,s);var t=s||{};"string"==typeof e||e instanceof NodeList||e instanceof Element?t.selector=e:"object"==typeof e&&(t=e),this.config(t)};l.prototype.config=function(e){if(this.selector=e.selector||"[data-gloss]",this.spacing=n(e,"spacing",!0),this.firstLineOrig=n(e,"firstLineOrig",!1),this.lastLineFree=n(e,"lastLineFree",!0),this.autoTag=n(e,"autoTag",!0),this.async=n(e,"async",!1),void 0===e.lexers)this.lexers=["{(.*?)}","([^\\s]+)"];else if(e.lexers instanceof Array&&o(e.lexers))this.lexers=e.lexers;else if(e.lexers instanceof RegExp)this.lexers=e.lexers;else{if("string"!=typeof e.lexers)throw new Error("Invalid lexer");this.lexers=[e.lexers]}"object"==typeof e.abbreviations&&(this.abbreviations=e.abbreviations),e.hasOwnProperty("events")||(e.events={}),this.events={beforeGloss:e.events.beforeGloss||"gloss:beforeGloss",afterGloss:e.events.afterGloss||"gloss:afterGloss",beforeLex:e.events.beforeLex||"gloss:beforeLex",afterLex:e.events.afterLex||"gloss:afterLex",beforeAlign:e.events.beforeAlign||"gloss:beforeAlign",afterAlign:e.events.afterAlign||"gloss:afterAlign",beforeFormat:e.events.beforeFormat||"gloss:beforeFormat",afterFormat:e.events.afterFormat||"gloss:afterFormat",start:e.events.start||"gloss:start",complete:e.events.complete||"gloss:complete"},e.hasOwnProperty("classes")||(e.classes={}),this.classes={glossed:e.classes.glossed||"gloss--glossed",noSpace:e.classes.noSpace||"gloss--no-space",words:e.classes.words||"gloss__words",word:e.classes.word||"gloss__word",line:e.classes.line||"gloss__line",lineNum:e.classes.lineNum||"gloss__line--",original:e.classes.original||"gloss__line--original",freeTranslation:e.classes.freeTranslation||"gloss__line--free",noAlign:e.classes.noAlign||"gloss__line--no-align",hidden:e.classes.hidden||"gloss__line--hidden",abbr:e.classes.abbr||"gloss__abbr"}},l.prototype.lex=function(e){var s=void 0;if(this.lexers instanceof RegExp)s=this.lexers;else{if(!(this.lexers instanceof Array))throw new Error("Invalid lexer");var t=this.lexers.join("|");s=new RegExp(t,"g")}var i=e.match(s).map(function(e){var s=e[0],t=e[e.length-1];if("{"===s&&"}"===t){var i=/(?:{)(.*)(?:})/;e=i.exec(e)[1]}return e});return i},l.prototype.tag=function(e){var s=this,t=this.abbreviations,i=["(\\b[0-4])(?=[A-Z]|\\b)","(N?[A-Z]+\\b)"].join("|"),n=new RegExp(i,"g"),r=e.replace(n,function(e){var i="N"===e[0]&&e.length>1,n=i?e.slice(1):e,r=void 0,a=void 0;return t[e]?(a=t[e],r='<abbr class="'+s.classes.abbr+'" title="'+a+'">'+e+"</abbr>"):i&&t[n]?(a=t[n],r='<abbr class="'+s.classes.abbr+'" title="non-'+a+'">'+e+"</abbr>"):r='<abbr class="'+s.classes.abbr+'">'+e+"</abbr>",r});return r},l.prototype.align=function(e){var s=e.reduce(function(e,s){return e.length>s.length?e:s},[]);return s.map(function(s,t){return e.map(function(e){return"undefined"==typeof e[t]?"":e[t]})})},l.prototype.format=function(e,s,i){var n=this,r=document.createElement(s),a=[];return t(r,this.classes.words),e.forEach(function(e){a.push('<div class="'+n.classes.word+'">'),e.forEach(function(e,s){var t=i+s;e=e?e:"&nbsp;",s>0&&n.autoTag&&(e=n.tag(e)),a.push('<p class="'+n.classes.line+" "+n.classes.lineNum+t+'">'+e+"</p>")}),a.push("</div>")}),r.innerHTML=a.join(""),r},l.prototype.gloss=function(e){function s(e,s,n){s instanceof Element||n(new Error("Invalid gloss element"));var r=Array.prototype.slice.call(s.children),o=[],l=null,c=0;if(a(s,e.events.beforeGloss),e.firstLineOrig){var f=r[0];t(f,e.classes.original)}if(e.lastLineFree){var v=r[r.length-1];t(v,e.classes.freeTranslation)}r.forEach(function(s,n){var r=i(s,e.classes.original),f=i(s,e.classes.freeTranslation),v=i(s,e.classes.noAlign),u=!r&&!f&&!v;if(u){a(s,e.events.beforeLex);var p=e.lex(s.innerHTML);a(s,e.events.afterLex,{tokens:p}),o.push(p),t(s,e.classes.hidden),l||(l=s,c=n)}else t(s,e.classes.line),t(s,e.classes.lineNum+n)}),a(s,e.events.beforeAlign,{lines:o});var u=e.align(o);a(s,e.events.afterAlign,{lines:u});var p=void 0;p="UL"===s.tagName||"OL"===s.tagName?"li":"div",a(s,e.events.beforeFormat,{lines:u});var g=e.format(u,p,c);a(g,e.events.afterFormat),s.insertBefore(g,l),e.spacing||t(s,e.classes.noSpace),t(s,e.classes.glossed),a(s,e.events.afterGloss)}var n=this,r=void 0;if("string"==typeof this.selector)r=document.querySelectorAll(this.selector);else if(this.selector instanceof NodeList)r=this.selector;else{if(!(this.selector instanceof Element))throw new Error("Invalid selector");r=[this.selector]}a(document,this.events.start,{glosses:r});var o=Array.prototype.slice.call(r);o.forEach(function(t){n.async?window.setTimeout(function(){return s(n,t,e)}):s(n,t,e)}),window.setTimeout(function(){"function"==typeof e&&e(null,r),a(document,n.events.complete,{glosses:r})})},l.prototype.abbreviations={1:"first person",2:"second person",3:"third person",A:"agent-like argument of canonical transitive verb",ABL:"ablative",ABS:"absolutive",ACC:"accusative",ADJ:"adjective",ADV:"adverb(ial)",AGR:"agreement",ALL:"allative",ANTIP:"antipassive",APPL:"applicative",ART:"article",AUX:"auxiliary",BEN:"benefactive",CAUS:"causative",CLF:"classifier",COM:"comitative",COMP:"complementizer",COMPL:"completive",COND:"conditional",COP:"copula",CVB:"converb",DAT:"dative",DECL:"declarative",DEF:"definite",DEM:"demonstrative",DET:"determiner",DIST:"distal",DISTR:"distributive",DU:"dual",DUR:"durative",ERG:"ergative",EXCL:"exclusive",F:"feminine",FOC:"focus",FUT:"future",GEN:"genitive",IMP:"imperative",INCL:"inclusive",IND:"indicative",INDF:"indefinite",INF:"infinitive",INS:"instrumental",INTR:"intransitive",IPFV:"imperfective",IRR:"irrealis",LOC:"locative",M:"masculine",N:"neuter",NEG:"negation / negative",NMLZ:"nominalizer / nominalization",NOM:"nominative",OBJ:"object",OBL:"oblique",P:"patient-like argument of canonical transitive verb",PASS:"passive",PFV:"perfective",PL:"plural",POSS:"possessive",PRED:"predicative",PRF:"perfect",PRS:"present",PROG:"progressive",PROH:"prohibitive",PROX:"proximal / proximate",PST:"past",PTCP:"participle",PURP:"purposive",Q:"question particle / marker",QUOT:"quotative",RECP:"reciprocal",REFL:"reflexive",REL:"relative",RES:"resultative",S:"single argument of canonical intransitive verb",SBJ:"subject",SBJV:"subjunctive",SG:"singular",TOP:"topic",TR:"transitive",VOC:"vocative"},s.exports=l});