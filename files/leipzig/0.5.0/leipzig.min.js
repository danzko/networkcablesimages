/*! leipzig.js v0.5.0 | ISC License | github.com/bdchauvette/leipzig.js */
!function(e,i){if("function"==typeof define&&define.amd)define("Leipzig",["exports","module"],i);else if("undefined"!=typeof exports&&"undefined"!=typeof module)i(exports,module);else{var n={exports:{}};i(n.exports,n),e.Leipzig=n.exports}}(this,function(e,i){"use strict";function n(e,i){e.classList?e.classList.add(i):e.className+=" "+i}function t(e,i){var n;if(e.classList)n=e.classList.contains(i);else{var i=new RegExp("(^| )"+i+"( |$)","gi");n=new RegExp(i).test(e.className)}return n}function s(e,i,n){return"undefined"==typeof e[i]?n:e[i]}function r(e){return e.every(function(e){return"string"==typeof e})}var a=function o(e,i){if(!(this instanceof o))return new o(e,i);var n=i||{};"string"==typeof e||e instanceof NodeList||e instanceof Element?n.elements=e:"object"==typeof e&&(n=e),this.config(n)};a.prototype.config=function(e){if(this.elements=e.elements||"[data-gloss]",this.spacing=s(e,"spacing",!0),this.firstLineOrig=s(e,"firstLineOrig",!1),this.lastLineFree=s(e,"lastLineFree",!0),this.autoTag=s(e,"autoTag",!0),this.async=s(e,"async",!1),void 0===e.tokenizers)this.tokenizers=["{(.*?)}","([^\\s]+)"];else if(e.tokenizers instanceof Array&&r(e.tokenizers))this.tokenizers=e.tokenizers;else if(e.tokenizers instanceof RegExp)this.tokenizers=e.tokenizers;else{if("string"!=typeof e.tokenizers)throw new Error("Invalid tokenizer");this.tokenizers=[e.tokenizers]}e.hasOwnProperty("class")||(e["class"]={}),this["class"]={glossed:e["class"].glossed||"gloss--glossed",noSpace:e["class"].noSpace||"gloss--no-space",words:e["class"].words||"gloss__words",word:e["class"].word||"gloss__word",line:e["class"].line||"gloss__line",lineNum:e["class"].lineNum||"gloss__line--",original:e["class"].original||"gloss__line--original",freeTranslation:e["class"].freeTranslation||"gloss__line--free",noAlign:e["class"].noAlign||"gloss__line--no-align",hidden:e["class"].hidden||"gloss__line--hidden",abbr:e["class"].abbr||"gloss__abbr"}},a.prototype.tokenize=function(e){var i=void 0;if(this.tokenizers instanceof RegExp)i=this.tokenizers;else{if(!(this.tokenizers instanceof Array))throw new Error("Invalid tokenizer");var n=this.tokenizers.join("|");i=new RegExp(n,"g")}var t=e.match(i).map(function(e){var i=e[0],n=e[e.length-1];if("{"===i&&"}"===n){var t=/(?:{)(.*)(?:})/;e=t.exec(e)[1]}return e});return t},a.prototype.tag=function(e){var i=this,n=this.abbreviations,t=["(\\b[0-4])(?=[A-Z]|\\b)","(N?[A-Z]+\\b)"].join("|"),s=new RegExp(t,"g"),r=e.replace(s,function(e){var t="N"===e[0]&&e.length>1,s=t?e.slice(1):e,r=void 0,a=void 0;return n[e]?(a=n[e],r='<abbr class="'+i["class"].abbr+'" title="'+a+'">'+e+"</abbr>"):t&&n[s]?(a=n[s],r='<abbr class="'+i["class"].abbr+'" title="non-'+a+'">'+e+"</abbr>"):r='<abbr class="'+i["class"].abbr+'">'+e+"</abbr>",r});return r},a.prototype.align=function(e){var i=e.reduce(function(e,i){return e.length>i.length?e:i},[]);return i.map(function(i,n){return e.map(function(e){return"undefined"==typeof e[n]?"":e[n]})})},a.prototype.format=function(e,i,t){var s=this,r=document.createElement(i),a=[];return n(r,this["class"].words),e.forEach(function(e){a.push('<div class="'+s["class"].word+'">'),e.forEach(function(e,i){var n=t+i;e=e?e:"&nbsp;",i>0&&s.autoTag&&(e=s.tag(e)),a.push('<p class="'+s["class"].line+" "+s["class"].lineNum+n+'">'+e+"</p>")}),a.push("</div>")}),r.innerHTML=a.join(""),r},a.prototype.gloss=function(e){function i(e,i,s){i instanceof Element||s(new Error("Invalid gloss element"));var r=Array.prototype.slice.call(i.children),a=[],o=null,l=0;if(e.firstLineOrig){var c=r[0];n(c,e["class"].original)}if(e.lastLineFree){var f=r[r.length-1];n(f,e["class"].freeTranslation)}r.forEach(function(i,s){var r=t(i,e["class"].original),c=t(i,e["class"].freeTranslation),f=t(i,e["class"].noAlign),u=!r&&!c&&!f;u?(a.push(e.tokenize(i.innerHTML)),n(i,e["class"].hidden),o||(o=i,l=s)):(n(i,e["class"].line),n(i,e["class"].lineNum+s))});var u=e.align(a),p=void 0;p="UL"===i.tagName||"OL"===i.tagName?"li":"div";var v=e.format(u,p,l);i.insertBefore(v,o),e.spacing||n(i,e["class"].noSpace),n(i,e["class"].glossed)}var s=this,r=void 0;if("string"==typeof this.elements)r=document.querySelectorAll(this.elements);else if(this.elements instanceof NodeList)r=this.elements;else{if(!(this.elements instanceof Element))throw new Error("Invalid selector");r=[this.elements]}var a=Array.prototype.slice.call(r);a.forEach(function(n){s.async?window.setTimeout(function(){return i(s,n,e)}):i(s,n,e)}),"function"==typeof e&&window.setTimeout(function(){return e(null,r)})},a.prototype.abbreviations={1:"first person",2:"second person",3:"third person",A:"agent-like argument of canonical transitive verb",ABL:"ablative",ABS:"absolutive",ACC:"accusative",ADJ:"adjective",ADV:"adverb(ial)",AGR:"agreement",ALL:"allative",ANTIP:"antipassive",APPL:"applicative",ART:"article",AUX:"auxiliary",BEN:"benefactive",CAUS:"causative",CLF:"classifier",COM:"comitative",COMP:"complementizer",COMPL:"completive",COND:"conditional",COP:"copula",CVB:"converb",DAT:"dative",DECL:"declarative",DEF:"definite",DEM:"demonstrative",DET:"determiner",DIST:"distal",DISTR:"distributive",DU:"dual",DUR:"durative",ERG:"ergative",EXCL:"exclusive",F:"feminine",FOC:"focus",FUT:"future",GEN:"genitive",IMP:"imperative",INCL:"inclusive",IND:"indicative",INDF:"indefinite",INF:"infinitive",INS:"instrumental",INTR:"intransitive",IPFV:"imperfective",IRR:"irrealis",LOC:"locative",M:"masculine",N:"neuter",NEG:"negation / negative",NMLZ:"nominalizer / nominalization",NOM:"nominative",OBJ:"object",OBL:"oblique",P:"patient-like argument of canonical transitive verb",PASS:"passive",PFV:"perfective",PL:"plural",POSS:"possessive",PRED:"predicative",PRF:"perfect",PRS:"present",PROG:"progressive",PROH:"prohibitive",PROX:"proximal / proximate",PST:"past",PTCP:"participle",PURP:"purposive",Q:"question particle / marker",QUOT:"quotative",RECP:"reciprocal",REFL:"reflexive",REL:"relative",RES:"resultative",S:"single argument of canonical intransitive verb",SBJ:"subject",SBJV:"subjunctive",SG:"singular",TOP:"topic",TR:"transitive",VOC:"vocative"},i.exports=a});