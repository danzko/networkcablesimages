{"version":3,"sources":["css.js","handler/css.js"],"names":["document","setTimeout","definition","resolveUrl","prepare","aUrl","slice","resolve","aLoader","style","createElement","source","type","media","styleSheet","cssText","innerHTML","setAttribute","path","target","appendChild","provide","modify","aValue","match","base","regexMatchCssUrl","exec","replace","getElementsByTagName","when"],"mappings":"AAAA;AACA,CCWE,SAASA,EAAUC,GACpB,YAKA,SAASC,GAAWC,GACnB,OAQCC,QAAS,SAASC,GACjB,MAA0B,SAAnBA,EAAKC,MAAM,IAAiBD,EAAO,OAASA,GAQpDE,QAAS,SAASC,GACjB,GAAIC,GAAST,EAASU,cAAc,SACnCC,EAASH,EAAQG,MAElBF,GAAMG,KAAQ,WACdH,EAAMI,MAAQ,SAEXJ,EAAMK,WACRL,EAAMK,WAAWC,QAAUJ,EAE3BF,EAAMO,UAAYL,EAGnBF,EAAMQ,aAAa,cAAeT,EAAQU,MAE1CC,EAAOC,YAAYX,GAEnBR,EAAW,WACVoB,QAAQ,WAAa,MAAOZ,QAa9Ba,OAAQ,SAASjB,EAAMkB,GAItB,IAHA,GACCC,GADGC,EAAOtB,EAAWE,EAAO,OAGtBmB,EAAQE,EAAiBC,KAAKJ,IACpCA,EAASA,EAAOK,QAAQJ,EAAM,GAAI,OAASrB,EAAWsB,EAAOD,EAAM,IAAM,IAG1E,OAAOD,KA5DV,GAAIJ,GAAmBnB,EAAS6B,qBAAqB,QAAQ,GAC5DH,EAAmB,2DAgEpBL,SAAQnB,GACN4B,KAAK,iBACN9B,SAAUC","file":"handler/css.js","sourcesContent":[null,"/**\n * Qoopido.demand handler text/css\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(document, setTimeout) {\n\t'use strict';\n\n\tvar target           = document.getElementsByTagName('head')[0],\n\t\tregexMatchCssUrl = /url\\(\\s*(?:\"|'|)(?!data:|http:|https:|\\/)(.+?)(?:\"|'|)\\)/g;\n\n\tfunction definition(resolveUrl) {\n\t\treturn {\n\t\t\t/**\n\t\t\t * Enables modification of the URL that gets requested\n\t\t\t *\n\t\t\t * @param {String} aUrl\n\t\t\t *\n\t\t\t * @returns {String}\n\t\t\t */\n\t\t\tprepare: function(aUrl) {\n\t\t\t\treturn aUrl.slice(-4) !== '.css' ? aUrl + '.css' : aUrl;\n\t\t\t},\n\t\t\t/**\n\t\t\t * handles resolving of CSS modules\n\t\t\t *\n\t\t\t * @param {String} aPath\n\t\t\t * @param {String} aValue\n\t\t\t */\n\t\t\tresolve: function(aLoader) {\n\t\t\t\tvar style  = document.createElement('style'),\n\t\t\t\t\tsource = aLoader.source;\n\n\t\t\t\tstyle.type  = 'text/css';\n\t\t\t\tstyle.media = 'only x';\n\n\t\t\t\tif(style.styleSheet) {\n\t\t\t\t\tstyle.styleSheet.cssText = source;\n\t\t\t\t} else {\n\t\t\t\t\tstyle.innerHTML = source;\n\t\t\t\t}\n\n\t\t\t\tstyle.setAttribute('demand-path', aLoader.path);\n\n\t\t\t\ttarget.appendChild(style);\n\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tprovide(function() { return style; });\n\t\t\t\t});\n\t\t\t},\n\t\t\t/**\n\t\t\t * handles modifying of CSS module's source prior to caching\n\t\t\t *\n\t\t\t * Rewrites relative CSS URLs to an absolute URL in relation to the URL the module was loaded from\n\t\t\t *\n\t\t\t * @param {String} aUrl\n\t\t\t * @param {String} aValue\n\t\t\t *\n\t\t\t * @returns {String}\n\t\t\t */\n\t\t\tmodify: function(aUrl, aValue) {\n\t\t\t\tvar base = resolveUrl(aUrl + '/..'),\n\t\t\t\t\tmatch;\n\n\t\t\t\twhile((match = regexMatchCssUrl.exec(aValue))) {\n\t\t\t\t\taValue = aValue.replace(match[0], 'url(' + resolveUrl(base + match[1]) + ')');\n\t\t\t\t}\n\n\t\t\t\treturn aValue;\n\t\t\t}\n\t\t};\n\t}\n\n\tprovide(definition)\n\t\t.when('/resolve/url');\n}(document, setTimeout));"],"sourceRoot":"/source/"}