{"version":3,"sources":["demand.js"],"names":["global","document","localStorage","JSON","XMLHttpRequest","setTimeout","clearTimeout","configUrl","configMain","configSettings","demand","self","this","module","isInstanceOf","Module","NULL","dependencies","arrayPrototypeSlice","call","arguments","forEach","resolveDependency","Pledge","all","provide","loader","path","isTypeOf","STRING_STRING","definition","queue","current","type","pledge","defered","resolved","resolve","pointer","modules","timeout","then","reject","Error","cached","store","length","next","log","when","configure","aConfig","key","aCache","cache","aStorage","storage","aDebug","debug","aVersion","version","aTimeout","aLifetime","lifetime","aBase","base","aPattern","pattern","aProbes","probes","STRING_BOOLEAN","isPositiveInteger","timeoutXhr","Math","min","max","timeoutQueue","Pattern","url","isObject","dependency","index","Loader","assign","id","factory","getTimestamp","Date","addTimestamp","aUrl","resolver","href","value","search","param","aMessage","console","STRING_UNDEFINED","toString","regex","expression","modifier","RegExp","escape","aValue","replace","regexMatchSpecial","removeProtocol","regexMatchProtocol","isAbsolute","aPath","regexIsAbsolute","test","object","isFinite","floor","executor","handle","PLEDGE_RESOLVED","PLEDGE_REJECTED","aState","aParameter","state","PLEDGE_PENDING","listener","aHandler","apply","rejected","aResolved","aRejected","push","aModule","aStack","message","stack","weight","regexPattern","regexUrl","Queue","aParent","xhr","defer","DEMAND_PREFIX_HANDLER","handler","retrieve","add","regexMatchUrl","XHR","XDR","onprogress","ontimeout","onerror","onabort","onload","source","responseText","open","prepare","send","readyState","abort","aDefinition","aDependencies","regexMatchLsState","storageAdapter","handlerJavascript","storageLocalstorage","Array","prototype","slice","arrayPrototypeConcat","concat","target","getElementsByTagName","createElement","DEMAND_ID","DEMAND_PREFIX","DEMAND_SUFFIX_STATE","DEMAND_SUFFIX_VALUE","DEMAND_PREFIX_STORAGE","DEMAND_PREFIX_VALIDATOR","XDomainRequest","regexMatchHandler","regexMatchSourcemap","hasRemainingSpace","defaults","match","isLoader","matches","process","get","parse","getItem","expires","clear","set","spaceBefore","remainingSpace","setItem","stringify","error","removeItem","indexOf","expired","script","async","text","setAttribute","appendChild","modify","replacement","exec","constructor","aResolve","aReject","aPledges","countTotal","countResolved","aPledge","aIndex","race","result","traverse","depth","indention","join","item","remove","aItem","shift","probe","isPending","adapter","main","settings"],"mappings":"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","file":"demand.js","sourcesContent":["/**\n * Qoopido demand\n *\n * Promise like module loader (XHR) with localStorage caching\n *\n * Copyright (c) 2015 Dirk Lueth\n *\n * Dual licensed under the MIT and GPL licenses.\n *  - http://www.opensource.org/licenses/mit-license.php\n *  - http://www.gnu.org/copyleft/gpl.html\n *\n * @author Dirk Lueth <info@qoopido.com>\n */\n\n;(function(global, document, localStorage, JSON, XMLHttpRequest, setTimeout, clearTimeout, configUrl, configMain, configSettings) {\n\t'use strict';\n\n\tvar // shortcuts\n\t\t\tarrayPrototypeSlice     = Array.prototype.slice,\n\t\t\tarrayPrototypeConcat    = Array.prototype.concat,\n\t\t\ttarget                  = document.getElementsByTagName('head')[0],\n\t\t\tresolver                = document.createElement('a'),\n\t\t// constants\n\t\t\tDEMAND_ID               = 'demand',\n\t\t\tDEMAND_PREFIX           = '[' + DEMAND_ID + ']',\n\t\t\tDEMAND_SUFFIX_STATE     = '[state]',\n\t\t\tDEMAND_SUFFIX_VALUE     = '[value]',\n\t\t\tDEMAND_PREFIX_HANDLER   = '/' + DEMAND_ID + '/handler/',\n\t\t\tDEMAND_PREFIX_STORAGE   = '/' + DEMAND_ID + '/storage/',\n\t\t\tDEMAND_PREFIX_VALIDATOR = '/validator/',\n\t\t\tSTRING_UNDEFINED        = 'undefined',\n\t\t\tSTRING_STRING           = 'string',\n\t\t\tSTRING_BOOLEAN          = 'boolean',\n\t\t\tPLEDGE_PENDING          = 'pending',\n\t\t\tPLEDGE_RESOLVED         = 'resolved',\n\t\t\tPLEDGE_REJECTED         = 'rejected',\n\t\t\tNULL                    = null,\n\t\t\tXHR                     = XMLHttpRequest,\n\t\t\tXDR                     = 'XDomainRequest' in global &&  global.XDomainRequest || XHR,\n\t\t// regular expressions\n\t\t\tregexIsAbsolute         = /^\\//i,\n\t\t\tregexMatchHandler       = /^([-\\w]+\\/?)+!/,\n\t\t\tregexMatchSpecial       = /[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g,\n\t\t\tregexMatchSourcemap     = /\\/\\/#\\s+sourceMappingURL\\s*=\\s*(.+?)\\.map/g,\n\t\t\tregexMatchProtocol      = /^http(s?):/,\n\t\t\tregexMatchUrl, regexMatchLsState,\n\t\t// flags\n\t\t\thasRemainingSpace       = localStorage && 'remainingSpace' in localStorage,\n\t\t// general storage & objects\n\t\t\tdefaults                = { cache: true, storage: 'localstorage', handler: 'js', debug: false, version: '1.0.0', lifetime: 0, timeout: 5, base: '/' },\n\t\t\tmodules                 = {},\n\t\t\tpattern                 = {},\n\t\t\tprobes                  = {},\n\t\t\tqueue, resolve, storageAdapter,\n\t\t// handler\n\t\t\thandlerJavascript,\n\t\t// storage\n\t\t\tstorageLocalstorage,\n\t\t// configuration\n\t\t\tbase, cache, storage, debug, timeoutXhr, timeoutQueue, version, lifetime;\n\n\t/**\n\t * demand required modules\n\t *\n\t * Will take any number of string arguments and return a Pledge.all\n\t * that resolves when all dependencies are resolved and rejects when\n\t * at least one dependency is rejected. Both, the resolved and\n\t * rejected callbacks will get all dependencies resolved or rejected\n\t * as arguments.\n\t *\n\t * If the scope of the call is of type \"Module\" relative paths are\n\t * resolved in relation to the parent module.\n\t *\n\t * @param {...String} dependency\n\t *\n\t * @returns {Pledge}\n\t *\n\t * @exports /demand\n\t */\n\tfunction demand() {\n\t\tvar self         = this || {},\n\t\t\tmodule       = isInstanceOf(self, Module) ? self : NULL,\n\t\t\tdependencies = arrayPrototypeSlice.call(arguments);\n\n\t\tdependencies.forEach(resolveDependency, module);\n\n\t\treturn Pledge.all(dependencies);\n\t}\n\n\t/**\n\t * provide modules\n\t *\n\t * Will either take two arguments, a \"path\" as a string first\n\t * and a \"definition\" function second or only a \"definition\"\n\t * function in case of an anonymous provide from a loaded module.\n\t *\n\t * In case of an anonymous provide it will be matched against\n\t * the queue to find the loader being resolved by this provide.\n\t * In case there is no loader in queue an error is thrown.\n\t *\n\t * When provide detects a duplicate a warning will be logged to\n\t * console in case the \"debug\" configuration option is set to true.\n\t *\n\t * @param {String} [path]\n\t * @param {Function} definition\n\t *\n\t * @returns {void|{when: Function}}\n\t *\n\t * @exports /provide\n\t */\n\tfunction provide() {\n\t\tvar path       = isTypeOf(arguments[0], STRING_STRING) ? arguments[0] : NULL,\n\t\t\tdefinition = !path ? arguments[0] : arguments[1],\n\t\t\tloader, dependencies;\n\n\t\tif(!path && queue.current) {\n\t\t\tloader = queue.current;\n\t\t\tpath   = loader.type + '!' + loader.path;\n\t\t}\n\n\t\tif(path) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tvar resolved = resolve.path(path),\n\t\t\t\t\tpointer  = modules[resolved.type] || (modules[resolved.type] = {}),\n\t\t\t\t\tmodule, pledge, defered;\n\n\t\t\t\tif(loader || !pointer[resolved.path]) {\n\t\t\t\t\tmodule = new Module(path, definition, dependencies);\n\t\t\t\t\tpledge = modules[module.type][module.path] = module.pledge;\n\n\t\t\t\t\tif(loader) {\n\t\t\t\t\t\tloader.timeout = clearTimeout(loader.timeout);\n\t\t\t\t\t\tdefered        = loader.defered;\n\n\t\t\t\t\t\tpledge.then(\n\t\t\t\t\t\t\tdefered.resolve,\n\t\t\t\t\t\t\tfunction() {\n\t\t\t\t\t\t\t\tdefered.reject(new Error('unable to resolve module', path, arguments));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\t!loader.cached && loader.store();\n\t\t\t\t\t\tqueue.length > 0 && queue.next();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tlog('duplicate found for module ' + resolved.path);\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn { when: function() { dependencies = arguments; } };\n\t\t} else {\n\t\t\tthrow new Error('unspecified anonymous provide');\n\t\t}\n\t}\n\n\t/**\n\t * alter demand configuration\n\t *\n\t * @param {Object} aConfig\n\t */\n\tfunction configure(aConfig) {\n\t\tvar aCache    = aConfig.cache,\n\t\t\taStorage  = aConfig.storage,\n\t\t\taDebug    = aConfig.debug,\n\t\t\taVersion  = aConfig.version,\n\t\t\taTimeout  = aConfig.timeout,\n\t\t\taLifetime = aConfig.lifetime,\n\t\t\taBase     = aConfig.base,\n\t\t\taPattern  = aConfig.pattern,\n\t\t\taProbes   = aConfig.probes,\n\t\t\tkey;\n\n\t\tcache   = isTypeOf(aCache, STRING_BOOLEAN)  ? aCache   : cache;\n\t\tstorage = isTypeOf(aStorage, STRING_STRING) ? aStorage : storage;\n\t\tdebug   = isTypeOf(aDebug, STRING_BOOLEAN)  ? aDebug   : debug;\n\t\tversion = isTypeOf(aVersion, STRING_STRING) ? aVersion : version;\n\n\t\tif(isPositiveInteger(aTimeout)) {\n\t\t\ttimeoutXhr   = Math.min(Math.max(aTimeout, 2), 10) * 1000;\n\t\t\ttimeoutQueue = Math.min(Math.max(timeoutXhr / 5, 1000), 5000);\n\t\t}\n\n\t\tif(isPositiveInteger(aLifetime)) {\n\t\t\tlifetime = aLifetime * 1000;\n\t\t}\n\n\t\tif(isTypeOf(aBase, STRING_STRING)) {\n\t\t\tbase = pattern.base = new Pattern('', resolve.url(aBase));\n\t\t}\n\n\t\tif(isObject(aPattern)) {\n\t\t\tfor(key in aPattern) {\n\t\t\t\tkey !== 'base' && (pattern[key] = new Pattern(key, aPattern[key]));\n\t\t\t}\n\t\t}\n\n\t\tif(isObject(aProbes)) {\n\t\t\tfor(key in aProbes) {\n\t\t\t\tprobes[key] = aProbes[key];\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * resolve dependency names to existing Modules or a new Loader\n\t *\n\t * @param {String} dependency\n\t * @param {Number} index\n\t * @param {Object[]} dependencies\n\t */\n\tfunction resolveDependency(dependency, index, dependencies) {\n\t\tvar self     = this,\n\t\t\tresolved = resolve.path(dependency, self),\n\t\t\ttype     = resolved.type,\n\t\t\tpath     = resolved.path,\n\t\t\tpointer  = modules[type] || (modules[type] = {});\n\n\t\tdependencies[index] = pointer[path] || (pointer[path] = (new Loader(dependency, self)).pledge);\n\t}\n\n\t/**\n\t * Shortcut to globally provide internal functions\n\t *\n\t * @param {String} id\n\t * @param {Function} factory\n\t */\n\tfunction assign(id, factory) {\n\t\tprovide(id, function() { return factory; });\n\t}\n\n\t/**\n\t * Get the current timestamp\n\t *\n\t * @returns {Number}\n\t */\n\tfunction getTimestamp() {\n\t\treturn +new Date();\n\t}\n\n\t/**\n\t * add timestamp to a given URL\n\t *\n\t * @param {String} aUrl\n\t *\n\t * @returns {String}\n\t */\n\tfunction addTimestamp(aUrl) {\n\t\tresolver.href = aUrl;\n\n\t\tvar value = resolver.search,\n\t\t\tparam = 'demand[timestamp]=' + getTimestamp();\n\n\t\tresolver.search += (value && value !== '?') ? '&' + param : '?' + param;\n\n\t\treturn resolver.href;\n\t}\n\n\t/**\n\t * log a message to the console\n\t *\n\t * @param {String|Error} aMessage\n\t */\n\tfunction log(aMessage) {\n\t\tvar type = (isInstanceOf(aMessage, Error)) ? 'error' : 'warn';\n\n\t\tif(!isTypeOf(console, STRING_UNDEFINED) && (debug || type !== 'warn')) {\n\t\t\tconsole[type](aMessage.toString());\n\t\t}\n\t}\n\n\t/**\n\t * generate a new RegExp\n\t *\n\t * @param {String} expression\n\t * @param {{String}} [modifier]\n\t *\n\t * @returns {RegExp}\n\t */\n\tfunction regex(expression, modifier) {\n\t\treturn new RegExp(expression, modifier);\n\t}\n\n\t/**\n\t * escape a string to be used in a RegExp\n\t *\n\t * @param {String} aValue\n\t *\n\t * @returns {String}\n\t */\n\tfunction escape(aValue) {\n\t\treturn aValue.replace(regexMatchSpecial, '\\\\$&');\n\t}\n\n\t/**\n\t * remove the protocol portion from any URL\n\t *\n\t * @param {String} url\n\t *\n\t * @returns {String}\n\t */\n\tfunction removeProtocol(url) {\n\t\treturn url.replace(regexMatchProtocol, '');\n\t}\n\n\t/**\n\t * check whether a given path is absolute\n\t *\n\t * @param {String} aPath\n\t *\n\t * @returns {Boolean}\n\t */\n\tfunction isAbsolute(aPath) {\n\t\treturn regexIsAbsolute.test(aPath);\n\t}\n\n\t/**\n\t * check whether a passed object is an instance of a certain type\n\t *\n\t * @param {*} object\n\t * @param {*} module\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isInstanceOf\n\t */\n\tfunction isInstanceOf(object, module) {\n\t\treturn object instanceof module;\n\t}\n\n\t/**\n\t * check wheter a given object is of a certain type\n\t *\n\t * @param {*} object\n\t * @param {String} type\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isTypeOf\n\t */\n\tfunction isTypeOf(object, type) {\n\t\treturn typeof object === type;\n\t}\n\n\t/**\n\t * check whether a given object is an object\n\t *\n\t * @param {*} object\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isObject\n\t */\n\tfunction isObject(object) {\n\t\treturn object && isTypeOf(object, 'object');\n\t}\n\n\t/**\n\t * check whether a given value is a positive integer\n\t *\n\t * @param {*} value\n\t *\n\t * @returns {Boolean}\n\t *\n\t * @exports /validator/isPositiveInteger\n\t */\n\tfunction isPositiveInteger(value) {\n\t\treturn isTypeOf(value, 'number') && isFinite(value) && Math.floor(value) === value && value >= 0;\n\t}\n\n\tresolve = {\n\t\t/**\n\t\t * resolve any given url\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\turl: function(aUrl) {\n\t\t\tresolver.href = aUrl;\n\n\t\t\treturn resolver.href;\n\t\t},\n\t\t/**\n\t\t * resolve any given path\n\t\t *\n\t\t * if context is either \"Loader\" or \"Module\" nothing will\n\t\t * be returned but instead \"handler\" and \"path\" will be\n\t\t * set directly on context. In case of \"Loader\" an\n\t\t * additional property \"url\" will be set as well.\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {Module} [aParent]\n\t\t *\n\t\t * @returns {void|{type: String, path: String}}\n\t\t */\n\t\tpath: function(aPath, aParent) {\n\t\t\tvar self     = this,\n\t\t\t\tpointer  = aPath.match(regexMatchHandler) || defaults.handler,\n\t\t\t\tisLoader = isInstanceOf(self, Loader),\n\t\t\t\tkey, match;\n\n\t\t\tif(!isTypeOf(pointer, STRING_STRING)) {\n\t\t\t\taPath   = aPath.replace(regex('^' + escape(pointer[0])), '');\n\n\t\t\t\tpointer = pointer[1];\n\t\t\t}\n\n\t\t\tif(!isAbsolute(aPath)) {\n\t\t\t\taPath = '/' + resolve.url(((aParent && aParent.path && resolve.url(aParent.path + '/../')) || '/') + aPath).replace(regexMatchUrl, '');\n\t\t\t}\n\n\t\t\tfor(key in pattern) {\n\t\t\t\tpattern[key].matches(aPath) && (!match || match.weight < pattern[key].weight) && (match = pattern[key]);\n\t\t\t}\n\n\t\t\tif(isLoader || isInstanceOf(self, Module)) {\n\t\t\t\tself.type = pointer;\n\t\t\t\tself.path = aPath;\n\n\t\t\t\tisLoader && (self.url = removeProtocol(resolve.url(match.process(aPath))));\n\t\t\t} else {\n\t\t\t\treturn { type: pointer, path: aPath };\n\t\t\t}\n\t\t}\n\t};\n\n\tstorageLocalstorage = {\n\t\t/**\n\t\t * retrieve cache for a given path and URL\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {void|String}\n\t\t */\n\t\tget: function(aPath, aUrl) {\n\t\t\tvar id, state;\n\n\t\t\tif(localStorage) {\n\t\t\t\tid    = DEMAND_PREFIX + '[' + aPath + ']';\n\t\t\t\tstate = JSON.parse(localStorage.getItem(id + DEMAND_SUFFIX_STATE));\n\n\t\t\t\tif(state && state.version === version && state.url === aUrl && (state.expires === 0 || state.expires > getTimestamp)) {\n\t\t\t\t\treturn localStorage.getItem(id + DEMAND_SUFFIX_VALUE);\n\t\t\t\t} else {\n\t\t\t\t\tstorageLocalstorage.clear.path(aPath);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * store cache for a given path, value and url\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aValue\n\t\t * @param {String} aUrl\n\t\t */\n\t\tset: function(aPath, aValue, aUrl) {\n\t\t\tvar id, spaceBefore;\n\n\t\t\tif(localStorage) {\n\t\t\t\tid = DEMAND_PREFIX + '[' + aPath + ']';\n\n\t\t\t\ttry {\n\t\t\t\t\tspaceBefore = hasRemainingSpace ? localStorage.remainingSpace : NULL;\n\n\t\t\t\t\tlocalStorage.setItem(id + DEMAND_SUFFIX_VALUE, aValue);\n\t\t\t\t\tlocalStorage.setItem(id + DEMAND_SUFFIX_STATE, JSON.stringify({ version: version, expires: lifetime > 0 ? getTimestamp + lifetime : 0, url: aUrl }));\n\n\t\t\t\t\t// strict equality check with \"===\" is required due to spaceBefore might be \"0\"\n\t\t\t\t\tif(spaceBefore !== NULL && localStorage.remainingSpace === spaceBefore) {\n\t\t\t\t\t\tthrow 'QUOTA_EXCEEDED_ERR';\n\t\t\t\t\t}\n\t\t\t\t} catch(error) {\n\t\t\t\t\tlog('unable to cache module ' + aPath);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * clear either a given path, all cached  or expired resources\n\t\t *\n\t\t * @param {String|Boolean} [aPath]\n\t\t */\n\t\tclear: {\n\t\t\tpath: function(aPath) {\n\t\t\t\tvar id;\n\n\t\t\t\tif(localStorage) {\n\t\t\t\t\tid = DEMAND_PREFIX + '[' + aPath + ']';\n\n\t\t\t\t\tlocalStorage.removeItem(id + DEMAND_SUFFIX_STATE);\n\t\t\t\t\tlocalStorage.removeItem(id + DEMAND_SUFFIX_VALUE);\n\t\t\t\t}\n\t\t\t},\n\t\t\tall: function() {\n\t\t\t\tvar key;\n\n\t\t\t\tif(localStorage) {\n\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\tkey.indexOf(DEMAND_PREFIX) === 0 && (localStorage.removeItem(key));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\texpired: function() {\n\t\t\t\tvar key, match, state;\n\n\t\t\t\tif(localStorage) {\n\t\t\t\t\tfor(key in localStorage) {\n\t\t\t\t\t\tmatch = key.match(regexMatchLsState);\n\n\t\t\t\t\t\tif(match) {\n\t\t\t\t\t\t\tstate = JSON.parse(localStorage.getItem(DEMAND_PREFIX + '[' + match[1] + ']' + DEMAND_SUFFIX_STATE));\n\n\t\t\t\t\t\t\tif(state && state.expires > 0 && state.expires <= getTimestamp) {\n\t\t\t\t\t\t\t\tstorageLocalstorage.clear.path(match[1]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\thandlerJavascript = {\n\t\t/**\n\t\t * Enables modification of the URL that gets requested\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tprepare: function(aUrl) {\n\t\t\treturn aUrl + '.js';\n\t\t},\n\t\t/**\n\t\t * handles resolving of JavaScript modules\n\t\t *\n\t\t * @param {String} aPath\n\t\t * @param {String} aValue\n\t\t */\n\t\tresolve: function(aPath, aValue) {\n\t\t\tvar script = document.createElement('script');\n\n\t\t\tscript.defer = script.async = true;\n\t\t\tscript.text  = aValue;\n\n\t\t\tscript.setAttribute('demand-path', aPath);\n\n\t\t\ttarget.appendChild(script);\n\t\t},\n\t\t/**\n\t\t * handles modifying of JavaScript module's source prior to caching\n\t\t *\n\t\t * Rewrites sourcemap URL to an absolute URL in relation to the URL the module was loaded from\n\t\t *\n\t\t * @param {String} aUrl\n\t\t * @param {String} aValue\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tmodify: function(aUrl, aValue) {\n\t\t\tvar match, replacement;\n\n\t\t\twhile(match = regexMatchSourcemap.exec(aValue)) {\n\t\t\t\treplacement = removeProtocol(resolve.url(aUrl + '/../' + match[1]));\n\t\t\t\taValue      = aValue.replace(match[0], '//# sourcemap=' + replacement + '.map');\n\t\t\t}\n\n\t\t\treturn aValue;\n\t\t}\n\t};\n\n\t/**\n\t * provides promise like behaviour\n\t *\n\t * unlike native Promises and polyfills a Pledge\n\t * can be resolved and rejected with multiple values\n\t * which will all get applied\n\t *\n\t * @param {Function} executor\n\t *\n\t * @constructor\n\t * @exports /pledge\n\t */\n\tfunction Pledge(executor) {\n\t\tvar self     = this,\n\t\t\tlistener = { resolved: [], rejected: [] };\n\n\t\tfunction resolve() {\n\t\t\thandle(PLEDGE_RESOLVED, arguments);\n\t\t}\n\n\t\tfunction reject() {\n\t\t\thandle(PLEDGE_REJECTED, arguments);\n\t\t}\n\n\t\tfunction handle(aState, aParameter) {\n\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\tself.state = aState;\n\t\t\t\tself.value = aParameter;\n\n\t\t\t\tlistener[aState].forEach(function(aHandler) {\n\t\t\t\t\taHandler.apply(NULL, self.value);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tself.then = function(aResolved, aRejected) {\n\t\t\tif(self.state === PLEDGE_PENDING) {\n\t\t\t\taResolved && listener[PLEDGE_RESOLVED].push(aResolved);\n\t\t\t\taRejected && listener[PLEDGE_REJECTED].push(aRejected);\n\t\t\t} else {\n\t\t\t\tswitch(self.state) {\n\t\t\t\t\tcase PLEDGE_RESOLVED:\n\t\t\t\t\t\taResolved.apply(NULL, self.value);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase PLEDGE_REJECTED:\n\t\t\t\t\t\taRejected.apply(NULL, self.value);\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\texecutor(resolve, reject);\n\t}\n\n\tPledge.prototype = {\n\t\tconstructor: Pledge,\n\t\tstate:       PLEDGE_PENDING,\n\t\tvalue:       NULL,\n\t\tlistener:    NULL,\n\t\tthen:        NULL\n\t};\n\n\t/**\n\t * provides Promise.defer like behaviour\n\t *\n\t * @returns {Object}\n\t */\n\tPledge.defer = function() {\n\t\tvar self = {};\n\n\t\tself.pledge = new Pledge(function(aResolve, aReject) {\n\t\t\tself.resolve = aResolve;\n\t\t\tself.reject  = aReject;\n\t\t});\n\n\t\treturn self;\n\t};\n\n\t/**\n\t * provides Promise.all like behaviour\n\t *\n\t * unlike native Promise.all Pledge.all will not reject on the\n\t * first rejected Pledge but when all Pledges ere either\n\t * resolved or rejected. Rejection callbacks will get passed\n\t * all rejected reasons, not only the first one.\n\t *\n\t * @param {Object[]} aPledges\n\t *\n\t * @returns {Pledge}\n\t */\n\tPledge.all = function(aPledges) {\n\t\tvar defered       = Pledge.defer(),\n\t\t\tpledge        = defered.pledge,\n\t\t\tresolved      = [],\n\t\t\trejected      = [],\n\t\t\tcountTotal    = aPledges.length,\n\t\t\tcountResolved = 0;\n\n\t\taPledges.forEach(function(aPledge, aIndex) {\n\t\t\taPledge.then(\n\t\t\t\tfunction() {\n\t\t\t\t\tresolved[aIndex] = arrayPrototypeSlice.call(arguments);\n\n\t\t\t\t\tcountResolved++;\n\n\t\t\t\t\tcountResolved === countTotal && defered.resolve.apply(NULL, arrayPrototypeConcat.apply([], resolved));\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\trejected.push(arrayPrototypeSlice.call(arguments));\n\n\t\t\t\t\trejected.length + countResolved === countTotal && defered.reject.apply(NULL, arrayPrototypeConcat.apply([], rejected));\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\n\t\treturn pledge;\n\t};\n\n\t/**\n\t * provides Promise.race like behaviour\n\t *\n\t * @param {Object[]} aPledges\n\t *\n\t * @returns {Pledge}\n\t */\n\tPledge.race = function(aPledges) {\n\t\tvar defered = Pledge.defer();\n\n\t\taPledges.forEach(function(aPledge) {\n\t\t\taPledge.then(\n\t\t\t\tdefered.resolve,\n\t\t\t\tdefered.reject\n\t\t\t);\n\t\t});\n\n\t\treturn defered.pledge;\n\t};\n\n\t/**\n\t * internal error class\n\t *\n\t * @param {String} aMessage\n\t * @param {String} [aModule]\n\t * @param {Object[]} [aStack]\n\t *\n\t * @constructor\n\t */\n\tfunction Error(aMessage, aModule, aStack) {\n\t\tvar self = this;\n\n\t\tself.message = aMessage;\n\n\t\taModule && (self.module  = aModule);\n\t\taStack && (self.stack = arrayPrototypeSlice.call(aStack));\n\t}\n\n\tError.prototype = {\n\t\tmessage: NULL,\n\t\tmodule:  NULL,\n\t\tstack:   NULL,\n\t\t/**\n\t\t * handles output to console\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\ttoString: function() {\n\t\t\tvar self   = this,\n\t\t\t\tresult = DEMAND_PREFIX + ' ' + self.message + ' ' + self.module;\n\n\t\t\tif(self.stack) {\n\t\t\t\tresult = Error.traverse(self.stack, result, 1);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\t};\n\n\t/**\n\t * handles recursion of stack on output to console\n\t *\n\t * @param {Object[]} stack\n\t * @param {String} value\n\t * @param {Number} depth\n\t *\n\t * @returns {String}\n\t */\n\tError.traverse = function(stack, value, depth) {\n\t\tvar indention = new Array(depth + 1).join(' ');\n\n\t\tstack.forEach(function(item) {\n\t\t\tvalue += '\\n' + indention + '> ' + item.message + ' ' + item.module;\n\n\t\t\tif(item.stack) {\n\t\t\t\tvalue = Error.traverse(item.stack, value, depth + 1);\n\t\t\t}\n\t\t});\n\n\t\treturn value;\n\t};\n\n\t/**\n\t * abstraction for pattern matching of paths\n\t *\n\t * @param {String} aPattern\n\t * @param {String} aUrl\n\t *\n\t * @constructor\n\t */\n\tfunction Pattern(aPattern, aUrl) {\n\t\tvar self = this;\n\n\t\tself.weight       = aPattern.length;\n\t\tself.url          = resolve.url(aUrl);\n\t\tself.regexPattern = regex('^' + escape(aPattern));\n\t\tself.regexUrl     = regex('^' + escape(aUrl));\n\t}\n\n\tPattern.prototype = {\n\t\tweight:       0,\n\t\turl:          NULL,\n\t\tregexPattern: NULL,\n\t\tregexUrl:     NULL,\n\t\t/**\n\t\t * check whether a given path matches the pattern\n\t\t *\n\t\t * @param {String} aPath\n\t\t *\n\t\t * @returns {Boolean}\n\t\t */\n\t\tmatches: function(aPath) {\n\t\t\treturn this.regexPattern.test(aPath);\n\t\t},\n\t\t/**\n\t\t * remove this pattern's URL from a given URL\n\t\t *\n\t\t * @param {String} aUrl\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tremove: function(aUrl) {\n\t\t\treturn aUrl.replace(this.regexUrl, '');\n\t\t},\n\t\t/**\n\t\t * process this pattern for a given path\n\t\t *\n\t\t * @param {String} aPath\n\t\t *\n\t\t * @returns {String}\n\t\t */\n\t\tprocess: function(aPath) {\n\t\t\tvar self = this;\n\n\t\t\treturn aPath.replace(self.regexPattern, self.url);\n\t\t}\n\t};\n\n\t/**\n\t * Queue handling for anonymous (loaded) modules\n\t *\n\t * @constructor\n\t */\n\tfunction Queue() {\n\t\tvar self = this;\n\n\t\tself.current = NULL;\n\t\tself.queue   = [];\n\t}\n\n\tQueue.prototype = {\n\t\tcurrent: NULL,\n\t\tqueue:   NULL,\n\t\tlength:  0,\n\t\t/**\n\t\t * add an item to the queue\n\t\t *\n\t\t * @param {Loader} aItem\n\t\t */\n\t\tadd: function(aItem) {\n\t\t\tvar self  = this,\n\t\t\t\tqueue = self.queue;\n\n\t\t\tqueue.push(aItem);\n\n\t\t\tself.length++;\n\n\t\t\tqueue.length === 1 && self.next();\n\t\t},\n\t\t/**\n\t\t * process the queue\n\t\t */\n\t\tnext: function() {\n\t\t\tvar self    = this,\n\t\t\t\tcurrent = self.current,\n\t\t\t\tqueue   = self.queue,\n\t\t\t\tdefered, path, handler;\n\n\t\t\tif(current) {\n\t\t\t\tself.current = NULL;\n\n\t\t\t\tqueue.shift();\n\t\t\t\tself.length--;\n\t\t\t}\n\n\t\t\tif(queue.length) {\n\t\t\t\tcurrent = self.current = self.queue[0];\n\t\t\t\tdefered = current.defered;\n\t\t\t\tpath    = current.path;\n\t\t\t\thandler = current.handler;\n\n\t\t\t\t!current.cached && handler.modify && (current.source = handler.modify(current.url, current.source));\n\n\t\t\t\thandler.resolve(path, current.source);\n\n\t\t\t\tif(probes[path]) {\n\t\t\t\t\tcurrent.probe();\n\t\t\t\t}\n\n\t\t\t\tcurrent.timeout = setTimeout(function() {\n\t\t\t\t\tdefered.reject(new Error('timeout resolving module', path));\n\t\t\t\t}, timeoutQueue);\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * module loader\n\t *\n\t * @param {String} aPath\n\t * @param {Module} [aParent]\n\t *\n\t * @constructor\n\t */\n\tfunction Loader(aPath, aParent) {\n\t\tvar self    = this,\n\t\t\tdefered = Pledge.defer(),\n\t\t\txhr;\n\n\t\tresolve.path.call(self, aPath, aParent);\n\n\t\tself.defered = defered;\n\t\tself.pledge  = defered.pledge;\n\n\t\tif(!aParent) {\n\t\t\tself.pledge.then(NULL, log);\n\t\t}\n\n\t\tdemand(DEMAND_PREFIX_HANDLER + self.type)\n\t\t\t.then(\n\t\t\t\tfunction(handler) {\n\t\t\t\t\tself.retrieve();\n\n\t\t\t\t\tself.handler = handler;\n\n\t\t\t\t\tif(self.cached) {\n\t\t\t\t\t\tqueue.add(self);\n\t\t\t\t\t} else {\n\t\t\t\t\t\txhr            = regexMatchUrl.test(self.url) ? new XHR() : new XDR();\n\t\t\t\t\t\txhr.onprogress = function() {};\n\t\t\t\t\t\txhr.ontimeout  = xhr.onerror = xhr.onabort = function() { defered.reject(new Error('unable to load module', self.path)); };\n\t\t\t\t\t\txhr.onload     = function() { self.timeout = clearTimeout(self.timeout); self.source = xhr.responseText; queue.add(self); };\n\n\t\t\t\t\t\txhr.open('GET', addTimestamp(handler.prepare(self.url)), true);\n\t\t\t\t\t\txhr.send();\n\n\t\t\t\t\t\tself.timeout = setTimeout(function() { if(xhr.readyState < 4) { xhr.abort(); } }, timeoutXhr);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tdefered.reject\n\t\t\t);\n\t}\n\n\tLoader.prototype = {\n\t\ttype:    NULL,\n\t\thandler: NULL,\n\t\tpath:    NULL,\n\t\turl:     NULL,\n\t\tdefered: NULL,\n\t\tpledge:  NULL,\n\t\tcached:  NULL,\n\t\tsource:  NULL,\n\t\ttimeout: NULL,\n\t\t/**\n\t\t * probe for the loading state of an external module\n\t\t */\n\t\tprobe: function() {\n\t\t\tvar self      = this,\n\t\t\t\tpath      = self.path,\n\t\t\t\tisPending = self.pledge.state === PLEDGE_PENDING,\n\t\t\t\tresult;\n\n\t\t\tif(isPending) {\n\t\t\t\tif(result = probes[path]()) {\n\t\t\t\t\tprovide(function() { return result; });\n\t\t\t\t} else {\n\t\t\t\t\tsetTimeout(self.probe, 100);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * store loaders result in localStorage\n\t\t */\n\t\tstore: function() {\n\t\t\tvar self = this;\n\n\t\t\tcache && storageAdapter.set(self.path, self.source, self.url);\n\t\t},\n\t\t/**\n\t\t * retrieve cache for loader\n\t\t */\n\t\tretrieve: function() {\n\t\t\tvar self   = this,\n\t\t\t\tsource = cache && storageAdapter.get(self.path, self.url),\n\t\t\t\tcached = self.cached = !!(source);\n\n\t\t\tcached && (self.source = source);\n\t\t}\n\t};\n\n\t/**\n\t * module\n\t *\n\t * @param {String} aPath\n\t * @param {Function} aDefinition\n\t * @param {Object[]} aDependencies\n\t *\n\t * @constructor\n\t */\n\tfunction Module(aPath, aDefinition, aDependencies) {\n\t\tvar self    = this,\n\t\t\tdefered = Pledge.defer();\n\n\t\tresolve.path.call(self, aPath);\n\n\t\t(self.pledge = defered.pledge).then(NULL, function() {\n\t\t\tlog(new Error('unable to resolve module', self.path, arguments));\n\t\t});\n\n\t\tif(aDependencies && aDependencies.length > 0) {\n\t\t\tdemand.apply(self, aDependencies)\n\t\t\t\t.then(\n\t\t\t\t\tfunction() { defered.resolve(aDefinition.apply(NULL, arguments)); },\n\t\t\t\t\tfunction() { defered.reject(new Error('unable to resolve dependencies for', self.path, arguments)); }\n\t\t\t\t);\n\t\t} else {\n\t\t\tdefered.resolve(aDefinition());\n\t\t}\n\t}\n\n\tModule.prototype = {\n\t\ttype:    NULL,\n\t\tpath:    NULL,\n\t\tpledge:  NULL\n\t};\n\n\t// initialization\n\t\t// regex\n\t\t\tregexMatchUrl     = regex('^' + escape(resolve.url('/')));\n\t\t\tregexMatchLsState = regex('^' + escape(DEMAND_PREFIX + '\\[(.+?)\\]' + DEMAND_SUFFIX_STATE + '$'));\n\n\t\t// create queue\n\t\t\tqueue = new Queue();\n\n\t\t// add pattern for \"/demand\" to point to original demand URL\n\t\t\tpattern['/' + DEMAND_ID] = new Pattern('/' + DEMAND_ID, resolve.url(configUrl + '/../').slice(0, -1));\n\n\t\t// configure\n\t\t\tconfigure(defaults) && configSettings && configure(configSettings);\n\n\t\t// register in global scope\n\t\t\tdemand.configure  = configure;\n\t\t\tglobal.demand     = demand;\n\t\t\tglobal.provide    = provide;\n\n\t\t// register modules\n\t\t\tassign('/' + DEMAND_ID, demand);\n\t\t\tassign('/provide', provide);\n\t\t\tassign('/pledge', Pledge);\n\t\t\tassign('/resolve/url', resolve.url);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isObject', isObject);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isTypeOf', isTypeOf);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isInstanceOf', isInstanceOf);\n\t\t\tassign(DEMAND_PREFIX_VALIDATOR + 'isPositiveInteger', isPositiveInteger);\n\t\t\tassign(DEMAND_PREFIX_STORAGE + defaults.storage, storageLocalstorage);\n\t\t\tassign(DEMAND_PREFIX_HANDLER + defaults.handler, handlerJavascript);\n\n\t// load main script\n\t\tsetTimeout(function() {\n\t\t\tdemand(DEMAND_PREFIX_STORAGE + storage)\n\t\t\t\t.then(\n\t\t\t\t\tfunction(adapter) {\n\t\t\t\t\t\tstorageAdapter = adapter;\n\t\t\t\t\t\tdemand.clear   = storageAdapter.clear;\n\n\t\t\t\t\t\tstorageAdapter.clear.expired();\n\n\t\t\t\t\t\tif(configMain) {\n\t\t\t\t\t\t\tsetTimeout(function() { demand(configMain); });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t});\n}(this, document, localStorage, JSON, XMLHttpRequest, setTimeout, clearTimeout, demand.url, demand.main, demand.settings));"],"sourceRoot":"/source/"}