{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.umd.min.js","webpack:///webpack/bootstrap 42a5ba026bc9c1eb9a4d","webpack:///./src/index.js","webpack:///./src/utils/check.js","webpack:///./src/utils/config.js","webpack:///./src/utils/params.js","webpack:///./src/utils/request.js","webpack:///./~/fetch-everywhere/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","get","url","req","_request2","post","put","patch","del","all","promises","Promise","Object","defineProperty","value","undefined","_request","fitch","check","resp","dataType","arguments","length","typeList","included","indexOf","ok","then","data","status","statusText","headers","errorMerssage","Error","createConfig","method","_ref","body","_ref$cache","cache","credentials","_ref$headers","Content-Type","integrity","_ref$mode","mode","redirect","referrer","referrerPolicy","JSON","stringify","result","transformParams","source","list","key","hasOwnProperty","push","encodeURIComponent","join","request","paramsEncoded","params","_params2","configObj","_config2","fetch","raw","_check2","_config","_params","_check","globalObj","self","bind","normalizeName","name","String","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","shift","done","support","iterable","Symbol","Headers","map","forEach","append","getOwnPropertyNames","consumed","bodyUsed","reject","fileReaderReady","reader","resolve","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","prototype","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","type","rejected","text","str","fromCharCode","apply","decode","json","parse","normalizeMethod","upcased","toUpperCase","methods","Request","input","options","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","e","viewClasses","DataView","isView","oldValue","has","callback","thisArg","keys","values","entries","clone","response","redirectStatuses","RangeError","location","init","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill"],"mappings":"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","file":"index.umd.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fitch\"] = factory();\n\telse\n\t\troot[\"fitch\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fitch\"] = factory();\n\telse\n\t\troot[\"fitch\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.put = exports.post = exports.patch = exports.get = exports.del = exports.all = undefined;\n\t\n\tvar _request = __webpack_require__(4);\n\t\n\tvar _request2 = _interopRequireDefault(_request);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction get(url, req) {\n\t  return (0, _request2.default)('GET', url, req);\n\t}\n\t\n\tfunction post(url, req) {\n\t  return (0, _request2.default)('POST', url, req);\n\t}\n\t\n\tfunction put(url, req) {\n\t  return (0, _request2.default)('PUT', url, req);\n\t}\n\t\n\tfunction patch(url, req) {\n\t  return (0, _request2.default)('PATCH', url, req);\n\t}\n\t\n\tfunction del(url, req) {\n\t  return (0, _request2.default)('DELETE', url, req);\n\t}\n\t\n\tfunction all(promises) {\n\t  return Promise.all(promises);\n\t}\n\t\n\tvar fitch = {\n\t  all: all,\n\t  del: del,\n\t  get: get,\n\t  patch: patch,\n\t  post: post,\n\t  put: put\n\t};\n\t\n\texports.default = fitch;\n\texports.all = all;\n\texports.del = del;\n\texports.get = get;\n\texports.patch = patch;\n\texports.post = post;\n\texports.put = put;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tfunction check(resp) {\n\t  var dataType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';\n\t\n\t  var typeList = ['arrayBuffer', 'blob', 'formData', 'json', 'text'];\n\t  var included = typeList.indexOf(dataType) !== -1;\n\t\n\t  if (resp.ok && included) {\n\t    return resp[dataType]().then(function (data) {\n\t      return {\n\t        data: data,\n\t        status: resp.status,\n\t        statusText: resp.statusText,\n\t        headers: resp.headers\n\t      };\n\t    });\n\t  }\n\t\n\t  var errorMerssage = !included ? 'Invalid data type' : resp.status + ' - ' + resp.statusText + '.';\n\t\n\t  throw new Error(errorMerssage);\n\t}\n\t\n\texports.default = check;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = createConfig;\n\tfunction createConfig(method) {\n\t  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t      body = _ref.body,\n\t      _ref$cache = _ref.cache,\n\t      cache = _ref$cache === undefined ? 'default' : _ref$cache,\n\t      credentials = _ref.credentials,\n\t      _ref$headers = _ref.headers,\n\t      headers = _ref$headers === undefined ? { 'Content-Type': 'application/json' } : _ref$headers,\n\t      integrity = _ref.integrity,\n\t      _ref$mode = _ref.mode,\n\t      mode = _ref$mode === undefined ? 'cors' : _ref$mode,\n\t      redirect = _ref.redirect,\n\t      referrer = _ref.referrer,\n\t      referrerPolicy = _ref.referrerPolicy;\n\t\n\t  var data = void 0;\n\t\n\t  if (body) {\n\t    data = JSON.stringify(body);\n\t  }\n\t\n\t  var result = {\n\t    body: data,\n\t    cache: cache,\n\t    credentials: credentials,\n\t    headers: headers,\n\t    method: method,\n\t    mode: mode,\n\t    redirect: redirect,\n\t    referrer: referrer\n\t  };\n\t\n\t  if (integrity) {\n\t    result.integrity = integrity;\n\t  }\n\t\n\t  if (referrerPolicy) {\n\t    result.referrerPolicy = referrerPolicy;\n\t  }\n\t\n\t  return result;\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = transformParams;\n\tfunction transformParams(source) {\n\t  var list = [];\n\t\n\t  for (var key in source) {\n\t    if ({}.hasOwnProperty.call(source, key)) {\n\t      list.push(encodeURIComponent(key) + '=' + encodeURIComponent(source[key]));\n\t    }\n\t  }\n\t\n\t  return list.length ? '?' + list.join('&') : '';\n\t}\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\t__webpack_require__(5);\n\t\n\tvar _config = __webpack_require__(2);\n\t\n\tvar _config2 = _interopRequireDefault(_config);\n\t\n\tvar _params = __webpack_require__(3);\n\t\n\tvar _params2 = _interopRequireDefault(_params);\n\t\n\tvar _check = __webpack_require__(1);\n\t\n\tvar _check2 = _interopRequireDefault(_check);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction request(method, url) {\n\t  var req = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\t\n\t  var paramsEncoded = '';\n\t  if (req.params) {\n\t    paramsEncoded = (0, _params2.default)(req.params);\n\t  }\n\t\n\t  var configObj = (0, _config2.default)(method, req);\n\t  var call = fetch(url + paramsEncoded, configObj);\n\t\n\t  return req.raw ? call : call.then(function (resp) {\n\t    return (0, _check2.default)(resp, req.dataType);\n\t  });\n\t}\n\t\n\texports.default = request;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// the whatwg-fetch polyfill installs the fetch() function\n\t// on the global object (window or self)\n\t//\n\t// Return that as the export for use in Webpack, Browserify etc.\n\t__webpack_require__(6);\n\tvar globalObj = typeof self !== 'undefined' && self || this;\n\tmodule.exports = globalObj.fetch.bind(globalObj);\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        var view = new Uint8Array(this._bodyArrayBuffer)\n\t        var str = String.fromCharCode.apply(null, view)\n\t        return Promise.resolve(str)\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.arrayBuffer) {\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (typeof input === 'string') {\n\t      this.url = input\n\t    } else {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split('\\r\\n').forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// index.umd.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 42a5ba026bc9c1eb9a4d","import request from './utils/request';\r\n\r\nfunction get(url, req) {\r\n  return request('GET', url, req);\r\n}\r\n\r\nfunction post(url, req) {\r\n  return request('POST', url, req);\r\n}\r\n\r\nfunction put(url, req) {\r\n  return request('PUT', url, req);\r\n}\r\n\r\nfunction patch(url, req) {\r\n  return request('PATCH', url, req);\r\n}\r\n\r\nfunction del(url, req) {\r\n  return request('DELETE', url, req);\r\n}\r\n\r\nfunction all(promises) {\r\n  return Promise.all(promises);\r\n}\r\n\r\nconst fitch = {\r\n  all,\r\n  del,\r\n  get,\r\n  patch,\r\n  post,\r\n  put,\r\n};\r\n\r\nexport default fitch;\r\n\r\nexport {\r\n  all,\r\n  del,\r\n  get,\r\n  patch,\r\n  post,\r\n  put,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","function check(resp, dataType = 'json') {\r\n  const typeList = ['arrayBuffer', 'blob', 'formData', 'json', 'text'];\r\n  const included = typeList.indexOf(dataType) !== -1;\r\n\r\n  if (resp.ok && included) {\r\n    return resp[dataType]()\r\n      .then(data => ({\r\n        data,\r\n        status: resp.status,\r\n        statusText: resp.statusText,\r\n        headers: resp.headers,\r\n      }));\r\n  }\r\n\r\n  const errorMerssage = !included ? 'Invalid data type' : `${resp.status} - ${resp.statusText}.`;\r\n\r\n  throw new Error(errorMerssage);\r\n}\r\n\r\nexport default check;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/check.js","export default function createConfig(method, {\r\n    body,\r\n    cache = 'default',\r\n    credentials,\r\n    headers = { 'Content-Type': 'application/json' },\r\n    integrity,\r\n    mode = 'cors',\r\n    redirect,\r\n    referrer,\r\n    referrerPolicy,\r\n  } = {}) {\r\n  let data;\r\n\r\n  if (body) {\r\n    data = JSON.stringify(body);\r\n  }\r\n\r\n  const result = {\r\n    body: data,\r\n    cache,\r\n    credentials,\r\n    headers,\r\n    method,\r\n    mode,\r\n    redirect,\r\n    referrer,\r\n  };\r\n\r\n  if (integrity) {\r\n    result.integrity = integrity;\r\n  }\r\n\r\n  if (referrerPolicy) {\r\n    result.referrerPolicy = referrerPolicy;\r\n  }\r\n\r\n  return result;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/config.js","export default function transformParams(source) {\r\n  const list = [];\r\n\r\n  for (const key in source) {\r\n    if ({}.hasOwnProperty.call(source, key)) {\r\n      list.push(`${encodeURIComponent(key)}=${encodeURIComponent(source[key])}`);\r\n    }\r\n  }\r\n\r\n  return list.length ? `?${list.join('&')}` : '';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/params.js","import 'fetch-everywhere';\r\n\r\nimport createConfig from './config';\r\nimport transformParams from './params';\r\nimport check from './check';\r\n\r\nfunction request(method, url, req = {}) {\r\n  let paramsEncoded = '';\r\n  if (req.params) {\r\n    paramsEncoded = transformParams(req.params);\r\n  }\r\n\r\n  const configObj = createConfig(method, req);\r\n  const call = fetch(url + paramsEncoded, configObj);\r\n\r\n  return req.raw ? call : call.then(resp => check(resp, req.dataType));\r\n}\r\n\r\nexport default request;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/request.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nvar globalObj = typeof self !== 'undefined' && self || this;\nmodule.exports = globalObj.fetch.bind(globalObj);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fetch-everywhere/fetch-npm-browserify.js\n// module id = 5\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        var view = new Uint8Array(this._bodyArrayBuffer)\n        var str = String.fromCharCode.apply(null, view)\n        return Promise.resolve(str)\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.arrayBuffer) {\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}