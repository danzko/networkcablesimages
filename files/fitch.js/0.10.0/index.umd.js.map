{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap ca2d4b559c9183525db6","webpack:///./src/index.js","webpack:///./src/utils/request.js","webpack:///./~/fetch-everywhere/fetch-npm-browserify.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/utils/config.js","webpack:///./src/utils/params.js","webpack:///./src/utils/check.js"],"names":["get","url","req","post","put","patch","del","all","promises","Promise","fitch","request","method","paramsEncoded","params","configObj","call","fetch","raw","then","resp","dataType","createConfig","body","cache","credentials","headers","integrity","mode","redirect","referrer","referrerPolicy","data","JSON","stringify","result","transformParams","source","list","key","hasOwnProperty","push","encodeURIComponent","length","join","check","typeList","included","indexOf","ok","status","statusText","errorMerssage","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;;;;ACtCA;;;;;;AAEA,UAASA,GAAT,CAAaC,GAAb,EAAkBC,GAAlB,EAAuB;AACrB,UAAO,uBAAQ,KAAR,EAAeD,GAAf,EAAoBC,GAApB,CAAP;AACD;;AAED,UAASC,IAAT,CAAcF,GAAd,EAAmBC,GAAnB,EAAwB;AACtB,UAAO,uBAAQ,MAAR,EAAgBD,GAAhB,EAAqBC,GAArB,CAAP;AACD;;AAED,UAASE,GAAT,CAAaH,GAAb,EAAkBC,GAAlB,EAAuB;AACrB,UAAO,uBAAQ,KAAR,EAAeD,GAAf,EAAoBC,GAApB,CAAP;AACD;;AAED,UAASG,KAAT,CAAeJ,GAAf,EAAoBC,GAApB,EAAyB;AACvB,UAAO,uBAAQ,OAAR,EAAiBD,GAAjB,EAAsBC,GAAtB,CAAP;AACD;;AAED,UAASI,GAAT,CAAaL,GAAb,EAAkBC,GAAlB,EAAuB;AACrB,UAAO,uBAAQ,QAAR,EAAkBD,GAAlB,EAAuBC,GAAvB,CAAP;AACD;;AAED,UAASK,GAAT,CAAaC,QAAb,EAAuB;AACrB,UAAOC,QAAQF,GAAR,CAAYC,QAAZ,CAAP;AACD;;AAED,KAAME,QAAQ;AACZH,WADY;AAEZD,WAFY;AAGZN,WAHY;AAIZK,eAJY;AAKZF,aALY;AAMZC;AANY,EAAd;;mBASeM,K;SAGbH,G,GAAAA,G;SACAD,G,GAAAA,G;SACAN,G,GAAAA,G;SACAK,K,GAAAA,K;SACAF,I,GAAAA,I;SACAC,G,GAAAA,G;;;;;;;;;;;;AC3CF;;AAEA;;;;AACA;;;;AACA;;;;;;AAEA,UAASO,OAAT,CAAiBC,MAAjB,EAAyBX,GAAzB,EAAwC;AAAA,OAAVC,GAAU,uEAAJ,EAAI;;AACtC,OAAIW,gBAAgB,EAApB;AACA,OAAIX,IAAIY,MAAR,EAAgB;AACdD,qBAAgB,sBAAgBX,IAAIY,MAApB,CAAhB;AACD;;AAED,OAAMC,YAAY,sBAAaH,MAAb,EAAqBV,GAArB,CAAlB;AACA,OAAMc,OAAOC,MAAMhB,MAAMY,aAAZ,EAA2BE,SAA3B,CAAb;;AAEA,UAAOb,IAAIgB,GAAJ,GAAUF,IAAV,GAAiBA,KAAKG,IAAL,CAAU;AAAA,YAAQ,qBAAMC,IAAN,EAAYlB,IAAImB,QAAhB,CAAR;AAAA,IAAV,CAAxB;AACD;;mBAEcV,O;;;;;;AClBf;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACNA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,QAAO;;AAEP,MAAK;AACL;AACA;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,yCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,mCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,yCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;;AAEA;AACA;AACA,wDAAuD;AACvD,UAAS;AACT;AACA,UAAS;AACT,+EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA,QAAO;AACP;AACA,QAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA8B,uBAAuB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA,wCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,gCAA+B,0BAA0B,eAAe;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,QAAO;;AAEP;AACA,MAAK;AACL;AACA;AACA,EAAC;;;;;;;;;;;;mBCncuBW,Y;AAAT,UAASA,YAAT,CAAsBV,MAAtB,EAUL;AAAA,kFAAJ,EAAI;AAAA,OATNW,IASM,QATNA,IASM;AAAA,yBARNC,KAQM;AAAA,OARNA,KAQM,8BARE,SAQF;AAAA,OAPNC,WAOM,QAPNA,WAOM;AAAA,2BANNC,OAMM;AAAA,OANNA,OAMM,gCANI,EAAE,gBAAgB,kBAAlB,EAMJ;AAAA,OALNC,SAKM,QALNA,SAKM;AAAA,wBAJNC,IAIM;AAAA,OAJNA,IAIM,6BAJC,MAID;AAAA,OAHNC,QAGM,QAHNA,QAGM;AAAA,OAFNC,QAEM,QAFNA,QAEM;AAAA,OADNC,cACM,QADNA,cACM;;AACR,OAAIC,aAAJ;;AAEA,OAAIT,IAAJ,EAAU;AACRS,YAAOC,KAAKC,SAAL,CAAeX,IAAf,CAAP;AACD;;AAED,OAAMY,SAAS;AACbZ,WAAMS,IADO;AAEbR,iBAFa;AAGbC,6BAHa;AAIbC,qBAJa;AAKbd,mBALa;AAMbgB,eANa;AAObC,uBAPa;AAQbC;AARa,IAAf;;AAWA,OAAIH,SAAJ,EAAe;AACbQ,YAAOR,SAAP,GAAmBA,SAAnB;AACD;;AAED,OAAII,cAAJ,EAAoB;AAClBI,YAAOJ,cAAP,GAAwBA,cAAxB;AACD;;AAED,UAAOI,MAAP;AACD,E;;;;;;;;;;;mBCrCuBC,e;AAAT,UAASA,eAAT,CAAyBC,MAAzB,EAAiC;AAC9C,OAAMC,OAAO,EAAb;;AAEA,QAAK,IAAMC,GAAX,IAAkBF,MAAlB,EAA0B;AACxB,SAAI,GAAGG,cAAH,CAAkBxB,IAAlB,CAAuBqB,MAAvB,EAA+BE,GAA/B,CAAJ,EAAyC;AACvCD,YAAKG,IAAL,CAAaC,mBAAmBH,GAAnB,CAAb,SAAwCG,mBAAmBL,OAAOE,GAAP,CAAnB,CAAxC;AACD;AACF;;AAED,UAAOD,KAAKK,MAAL,SAAkBL,KAAKM,IAAL,CAAU,GAAV,CAAlB,GAAqC,EAA5C;AACD,E;;;;;;;;;;;ACVD,UAASC,KAAT,CAAezB,IAAf,EAAwC;AAAA,OAAnBC,QAAmB,uEAAR,MAAQ;;AACtC,OAAMyB,WAAW,CAAC,aAAD,EAAgB,MAAhB,EAAwB,UAAxB,EAAoC,MAApC,EAA4C,MAA5C,CAAjB;AACA,OAAMC,WAAWD,SAASE,OAAT,CAAiB3B,QAAjB,MAA+B,CAAC,CAAjD;;AAEA,OAAID,KAAK6B,EAAL,IAAWF,QAAf,EAAyB;AACvB,YAAO3B,KAAKC,QAAL,IACJF,IADI,CACC;AAAA,cAAS;AACba,mBADa;AAEbkB,iBAAQ9B,KAAK8B,MAFA;AAGbC,qBAAY/B,KAAK+B,UAHJ;AAIbzB,kBAASN,KAAKM;AAJD,QAAT;AAAA,MADD,CAAP;AAOD;;AAED,OAAM0B,gBAAgB,CAACL,QAAD,GAAY,mBAAZ,GAAqC3B,KAAK8B,MAA1C,WAAsD9B,KAAK+B,UAA3D,MAAtB;;AAEA,SAAM,IAAIE,KAAJ,CAAUD,aAAV,CAAN;AACD;;mBAEcP,K","file":"index.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"fitch\"] = factory();\n\telse\n\t\troot[\"fitch\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap ca2d4b559c9183525db6","import request from './utils/request';\r\n\r\nfunction get(url, req) {\r\n  return request('GET', url, req);\r\n}\r\n\r\nfunction post(url, req) {\r\n  return request('POST', url, req);\r\n}\r\n\r\nfunction put(url, req) {\r\n  return request('PUT', url, req);\r\n}\r\n\r\nfunction patch(url, req) {\r\n  return request('PATCH', url, req);\r\n}\r\n\r\nfunction del(url, req) {\r\n  return request('DELETE', url, req);\r\n}\r\n\r\nfunction all(promises) {\r\n  return Promise.all(promises);\r\n}\r\n\r\nconst fitch = {\r\n  all,\r\n  del,\r\n  get,\r\n  patch,\r\n  post,\r\n  put,\r\n};\r\n\r\nexport default fitch;\r\n\r\nexport {\r\n  all,\r\n  del,\r\n  get,\r\n  patch,\r\n  post,\r\n  put,\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import 'fetch-everywhere';\r\n\r\nimport createConfig from './config';\r\nimport transformParams from './params';\r\nimport check from './check';\r\n\r\nfunction request(method, url, req = {}) {\r\n  let paramsEncoded = '';\r\n  if (req.params) {\r\n    paramsEncoded = transformParams(req.params);\r\n  }\r\n\r\n  const configObj = createConfig(method, req);\r\n  const call = fetch(url + paramsEncoded, configObj);\r\n\r\n  return req.raw ? call : call.then(resp => check(resp, req.dataType));\r\n}\r\n\r\nexport default request;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/request.js","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nvar globalObj = typeof self !== 'undefined' && self || this;\nmodule.exports = globalObj.fetch.bind(globalObj);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/fetch-everywhere/fetch-npm-browserify.js\n// module id = 2\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        var view = new Uint8Array(this._bodyArrayBuffer)\n        var str = String.fromCharCode.apply(null, view)\n        return Promise.resolve(str)\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.arrayBuffer) {\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (typeof input === 'string') {\n      this.url = input\n    } else {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split('\\r\\n').forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/whatwg-fetch/fetch.js\n// module id = 3\n// module chunks = 0","export default function createConfig(method, {\r\n    body,\r\n    cache = 'default',\r\n    credentials,\r\n    headers = { 'Content-Type': 'application/json' },\r\n    integrity,\r\n    mode = 'cors',\r\n    redirect,\r\n    referrer,\r\n    referrerPolicy,\r\n  } = {}) {\r\n  let data;\r\n\r\n  if (body) {\r\n    data = JSON.stringify(body);\r\n  }\r\n\r\n  const result = {\r\n    body: data,\r\n    cache,\r\n    credentials,\r\n    headers,\r\n    method,\r\n    mode,\r\n    redirect,\r\n    referrer,\r\n  };\r\n\r\n  if (integrity) {\r\n    result.integrity = integrity;\r\n  }\r\n\r\n  if (referrerPolicy) {\r\n    result.referrerPolicy = referrerPolicy;\r\n  }\r\n\r\n  return result;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/config.js","export default function transformParams(source) {\r\n  const list = [];\r\n\r\n  for (const key in source) {\r\n    if ({}.hasOwnProperty.call(source, key)) {\r\n      list.push(`${encodeURIComponent(key)}=${encodeURIComponent(source[key])}`);\r\n    }\r\n  }\r\n\r\n  return list.length ? `?${list.join('&')}` : '';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/params.js","function check(resp, dataType = 'json') {\r\n  const typeList = ['arrayBuffer', 'blob', 'formData', 'json', 'text'];\r\n  const included = typeList.indexOf(dataType) !== -1;\r\n\r\n  if (resp.ok && included) {\r\n    return resp[dataType]()\r\n      .then(data => ({\r\n        data,\r\n        status: resp.status,\r\n        statusText: resp.statusText,\r\n        headers: resp.headers,\r\n      }));\r\n  }\r\n\r\n  const errorMerssage = !included ? 'Invalid data type' : `${resp.status} - ${resp.statusText}.`;\r\n\r\n  throw new Error(errorMerssage);\r\n}\r\n\r\nexport default check;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/check.js"],"sourceRoot":""}